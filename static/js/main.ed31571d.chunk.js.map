{"version":3,"sources":["components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/TascListItem/TaskListItem.js","components/TaskList/TaskList.js","components/Filter.js","App.js","index.js"],"names":["Layout","children","className","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubnit","preventDefault","props","onAddTask","onSubmit","this","type","text","onChange","Component","TaskListItem","onRemove","onClick","TaskList","tasks","onRemoveTask","map","id","Filter","onChangeFilter","App","filter","changeFilter","console","log","addtask","task","includes","alert","contact","uuidv4","prevstate","removeTask","taskId","prevState","getVisibleTasks","toLowerCase","persistedTasks","localStorage","getItem","JSON","parse","setItem","stringify","visibleTasks","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed31571d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\r\n\r\nexport default Layout;","import React, { Component } from \"react\";\r\nimport \"./ContactForm.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubnit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddTask({ ...this.state });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubnit}>\r\n        <label className=\"ContactForm-label\">\r\n          Name\r\n          <input\r\n            className=\"ContactForm-input\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className=\"ContactForm-label\">\r\n          Number\r\n          <input\r\n            className=\"ContactForm-input\"\r\n            name=\"number\"\r\n            type=\"phone\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"ContactForm-button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport '../TaskList/TaskList.css';\r\n\r\nconst TaskListItem = ({number, name, onRemove }) => {\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <li className='TaskList-item '>\r\n      <p className=\"TaskList-text\">{name}: {number}.</p>\r\n      \r\n      \r\n\r\n      {/* <label>\r\n        <input type=\"checkbox\" checked={completed} onChange={onUpdate} />\r\n        Completed\r\n      </label> */}\r\n\r\n      <section className=\"TaskList-actions\">\r\n        <button type=\"button\"  className=\"TaskList-button\" onClick={onRemove}>\r\n          Удалить\r\n        </button>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nTaskListItem.propTypes={\r\n  number: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskListItem;","\r\nimport React from 'react';\r\nimport TaskListItem from '../TascListItem/TaskListItem';\r\nimport PropTypes from 'prop-types'\r\nimport './TaskList.css';\r\n\r\nconst TaskList = ({ tasks, onRemoveTask }) => (\r\n  <ul className='TaskList'>\r\n    {tasks.map(({ id, name,number}) => (\r\n      <TaskListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n     \r\n        onRemove={() => onRemoveTask(id)}\r\n       \r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.func.isRequired,\r\n  onRemoveTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TaskList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter })=> {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default  Filter","// import SignAppForm from './components/SignAppForm/SignAppForm';\nimport React, { Component } from \"react\";\nimport Layout from \"./components/Layout/Layout\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport TaskList from \"./components/TaskList/TaskList\";\nimport Filter from \"./components/Filter\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class App extends Component {\n  state = {\n    tasks: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    console.log(\"componentDidMount  \");\n    const persistedTasks = localStorage.getItem(\"tasks\");\n\n    if (persistedTasks) {\n      this.setState({\n        tasks: JSON.parse(persistedTasks),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    console.log(\"componentDidUpdate\", prevState);\n    if (prevState.tasks !== this.state.tasks) {\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks));\n    }\n  }\n\n  changeFilter = (filter) => {\n    console.log(filter);\n    this.setState({ filter });\n  };\n\n  addtask = (task) => {\n    const semName = this.state.tasks\n      .map((task) => task.name)\n      .includes(task.name);\n    if (semName) {\n      alert(`${task.name} is already in contacts`);\n    } else {\n      const contact = {\n        id: uuidv4(),\n        ...task,\n      };\n\n      this.setState((prevstate) => {\n        return {\n          tasks: [...prevstate.tasks, contact],\n        };\n      });\n    }\n  };\n\n  removeTask = (taskId) => {\n    this.setState((prevState) => {\n      return {\n        tasks: prevState.tasks.filter(({ id }) => id !== taskId),\n      };\n    });\n  };\n\n  getVisibleTasks = () => {\n    const { tasks, filter } = this.state;\n\n    return tasks.filter((tasks) =>\n      tasks.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleTasks = this.getVisibleTasks();\n    console.log(\"visibletasc\", visibleTasks);\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onAddTask={this.addtask} />\n\n        <h2>Contacts</h2>\n\n        {visibleTasks.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n\n        {visibleTasks.length > 0 && (\n          <TaskList tasks={visibleTasks} onRemoveTask={this.removeTask} />\n        )}\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import SignAppForm from \"./components/SignAppForm\";\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}